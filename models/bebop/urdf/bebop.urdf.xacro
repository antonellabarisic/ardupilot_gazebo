<?xml version="1.0"?>

<robot name="bebop" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:property name="enable_velodyne" value="$(arg enable_velodyne)"/>
	<xacro:property name="enable_magnet" value="$(arg enable_magnet)"/>
  	<xacro:property name="namespace" value="$(arg namespace)" />
  	<xacro:property name="fdm_port_in" value="$(arg fdm_port_in)"/>
	<xacro:property name="fdm_port_out" value="$(arg fdm_port_out)"/>

  <!-- Instantiate bebop "mechanics" -->
	<xacro:include filename="$(find ardupilot_gazebo)/models/bebop/urdf/bebop_base.urdf.xacro" />
	<xacro:include filename="$(find rotors_description)/urdf/component_snippets.xacro" />
	
  <!-- Realistic odometry sensor with noise -->
	<xacro:odometry_plugin_macro
		namespace="${namespace}"
		odometry_sensor_suffix=""
		parent_link="${namespace}/base_link"
		pose_topic="pose"
		pose_with_covariance_topic="pose_with_covariance"
		position_topic="position"
		transform_topic="transform"
		odometry_topic="odometry"
		parent_frame_id="world"
		child_frame_id="${namespace}/base_link"
		mass_odometry_sensor="0.01"
		measurement_divisor="20"
		measurement_delay="0"
		unknown_delay="0.0"
		noise_normal_position="0.0 0.0 0.0"
		noise_normal_quaternion="0.0 0.0 0.0"
		noise_normal_linear_velocity="0.0 0.0 0.0"
		noise_normal_angular_velocity="0.0 0.0 0.0"
		noise_uniform_position="0.0 0.0 0.0"
		noise_uniform_quaternion="0.0 0.0 0.0"
		noise_uniform_linear_velocity="0.0 0.0 0.0"
		noise_uniform_angular_velocity="0.0 0.0 0.0"
		enable_odometry_map="false"
		odometry_map=""
		image_scale="">
		<inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" /> <!-- [kg m^2] [kg m^2] [kg m^2] [kg m^2] [kg m^2] [kg m^2] -->
		<origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
	</xacro:odometry_plugin_macro>

	<!-- Ground truth odometry sensor without noise -->
	<xacro:odometry_plugin_macro
		namespace="${namespace}"
		odometry_sensor_suffix="gt"
		parent_link="${namespace}/base_link"
		pose_topic="pose_gt"
		pose_with_covariance_topic="pose_with_covariance_gt"
		position_topic="position_gt"
		transform_topic="transform_gt"
		odometry_topic="odometry_gt"
		parent_frame_id="world"
		child_frame_id="${namespace}/base_link"
		mass_odometry_sensor="0.01"
		measurement_divisor="20"
		measurement_delay="0"
		unknown_delay="0.0"
		noise_normal_position="0.0 0.0 0.0"
		noise_normal_quaternion="0.0 0.0 0.0"
		noise_normal_linear_velocity="0.0 0.0 0.0"
		noise_normal_angular_velocity="0.0 0.0 0.0"
		noise_uniform_position="0.0 0.0 0.0"
		noise_uniform_quaternion="0.0 0.0 0.0"
		noise_uniform_linear_velocity="0.0 0.0 0.0"
		noise_uniform_angular_velocity="0.0 0.0 0.0"
		enable_odometry_map="false"
		odometry_map=""
		image_scale="">
		<inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001" /> <!-- [kg m^2] [kg m^2] [kg m^2] [kg m^2] [kg m^2] [kg m^2] -->
		<origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
	</xacro:odometry_plugin_macro>

	<xacro:ardupilot
		imu_topic="${namespace}/imu"
		control_topic="${namespace}/gazebo/command/motor_speed"
		imu_sensor_name="${namespace}::imu_link::imu_sensor"
		rotor_0_joint="${namespace}::${namespace}/rotor_0_joint"
		rotor_1_joint="${namespace}::${namespace}/rotor_1_joint"
		rotor_2_joint="${namespace}::${namespace}/rotor_2_joint"
		rotor_3_joint="${namespace}::${namespace}/rotor_3_joint"
		thrust_multiplier="1000"
		fdm_port_in="${fdm_port_in}"
		fdm_port_out="${fdm_port_out}">
	</xacro:ardupilot>

    <link name="laser1D_link">
      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
    </link>
    <joint name="laser1D_joint" type="fixed">
      <!--<axis xyz="0 0 1" />-->
      <origin xyz="0.111 0 0.0217" rpy="0 0 0"/>
      <parent link="$(arg namespace)/base_link"/>
      <child link="laser1D_link"/>
    </joint>
    
 	<gazebo reference="laser1D_link">
		<sensor type="ray" name="laser1D_sensor">
	      <pose>0 0 0 0 0 0</pose>
	      <visualize>true</visualize>
	      <update_rate>200</update_rate>
	      <ray>
	        <scan>
	          <horizontal>
	            <samples>1</samples>
	            <resolution>1</resolution>
	            <min_angle>0</min_angle>
	            <max_angle>0</max_angle>
	          </horizontal>
	        </scan>
	        <range>
	          <min>0.10</min>
	          <max>100.0</max>
	          <resolution>0.01</resolution>
	        </range>
	        <noise>
	          <type>gaussian</type>
	          <!-- Noise parameters based on published spec for Hokuyo laser
	               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
	               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
	               reading. -->
	          <mean>0.0</mean>
	          <stddev>0.01</stddev>
	        </noise>
	      </ray>
	      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
	        <topicName>laser/scan</topicName>
	        <frameName>laser1D_link</frameName>
	      </plugin>
	    </sensor>
  	</gazebo>
    
    
    <xacro:if value="${enable_velodyne}">
	    <xacro:include filename="$(find velodyne_description)/urdf/VU-8.urdf.xacro"/>
	    <VU-8 parent="base_link" name="leddar" topic="/leddar_points" hz="10" samples="440" gpu="false"
	           min_range="0.0" lasers="16">
	        <origin xyz="0.1 0 0.15" rpy="3.141592653589793 0.1323284641020683 0." />
	    </VU-8>
    </xacro:if>

	<!--elektromagnet-->
	<xacro:if value="${enable_magnet}">
	<joint name="electromagnet_joint" type="fixed">
		<axis xyz="0 1 0" />
		<origin xyz="0.0 0.0 -0.075" rpy="0 0 0"/>
		<parent link="base_link"/>
		<child link="electromagnet_actuator"/>
	</joint>

	<link name="electromagnet_actuator">
		<inertial>
		<origin xyz="0 0 0" rpy="0 0 0" />
		<mass value="0.025"/>
		<inertia ixx="0.0001" ixy="0" ixz="0" iyy ="0.0001" iyz = "0" izz = "0.0001" />
		</inertial>
		<collision name="collision">
		<geometry>
			<cylinder radius="0.04" length="0.035"/>
		</geometry>
		</collision>

		<visual>
		<geometry>
			<cylinder radius="0.08" length="0.035"/>
		</geometry>
		</visual>
	</link>

	<gazebo>
		<plugin name="dipole_magnet" filename="libstorm_gazebo_dipole_magnet.so">
			<bodyName>${namespace}::base_link</bodyName>
			<dipole_moment>0 0 50</dipole_moment>
			<!-- Set to false if not using ROS -->
			<shouldPublish>true</shouldPublish>
			<topicNs>magnet_uav</topicNs>
			<updateRate>100</updateRate>
			<gain>1</gain>
		</plugin>
	</gazebo>
  </xacro:if>

</robot>

